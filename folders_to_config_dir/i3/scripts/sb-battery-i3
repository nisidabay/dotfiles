#!/bin/bash

# Dynamically find the first battery in the system
for battery in /sys/class/power_supply/BAT*; do
  if [ -d "$battery" ]; then
    battery_path="$battery"
    break
  fi
done

if [ -z "$battery_path" ]; then
  echo "No battery found"
  exit 1
fi

# Define the path to the battery uevent
battery_uevent="$battery_path/uevent"

# Check if battery_uevent file exists
if [ ! -f "$battery_uevent" ]; then
  echo "Battery uevent file not found"
  exit 1
fi

# Read battery information
source "$battery_uevent"

# Define low battery threshold
low_threshold=10

# Parse the status and capacity
battery_status=$(grep -e 'POWER_SUPPLY_STATUS=' $battery_uevent | cut -d'=' -f2)
battery_capacity=$(grep -e 'POWER_SUPPLY_CAPACITY=' $battery_uevent | cut -d'=' -f2)

# Format output based on battery status
case $battery_status in
    Charging|Full)
        if [ "$battery_status" = "Full" ]; then
            echo "<span color='#66FF99'> [  ] $battery_capacity% </span>"
        else
            echo "<span color='#00e64d'>[  ]  $battery_capacity% </span>"
        fi
        ;;
    Discharging)
        if [ "$battery_capacity" -le "$low_threshold" ]; then
            # Use custom color for low battery if needed
            echo "<span color='#fa4c7e'>[   ] $battery_capacity% </span>"
        else
            echo "<span color='#8080ff' >[   ] $battery_capacity% </span>"
        fi
        ;;
    *)
        echo "[🔌] $battery_capacity%"

        ;;
esac
