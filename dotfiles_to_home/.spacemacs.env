# ---------------------------------------------------------------------------
#                    Spacemacs environment variables
# ---------------------------------------------------------------------------
# This file has been generated by Spacemacs. It contains all environment
# variables defined in your default shell except those with names matching
# regexps in `spacemacs-ignored-environment-variables'. If you add any
# duplicate settings for a variable, only the first setting is effective.
# PATH is a special case: all PATH settings are read, each non-duplicate
# directory entry is prepended to the `exec-path' variable, and then PATH is
# set to the final value of `exec-path'.
#
# You can safely edit this file to change values or add or remove entries.
# Spacemacs won't overwrite the file unless you call the function
# `spacemacs/force-init-spacemacs-env'.
#
# If you don't want to use this file but would rather manage your environment
# variables yourself, remove the call to `spacemacs/load-spacemacs-env' from
# the `dotspacemacs/user-env' function in your dotfile and replace it with
# your own initialization code. You can use `exec-path-from-shell' if you add
# it to your additional packages, or simply use `setenv' and
# `(add-to-list 'exec-path ...)', which are built-in.
#
# It is recommended to use this file as it unambiguously and explicitly sets
# the values of your environment variables.
# ---------------------------------------------------------------------------

# Environment variables:
# ----------------------
 IFS='
 IFS="$oldIFS";
 IFS='
 IFS="$oldIFS";
 IFS='
 IFS="$oldIFS";
 IFS='
 IFS="$oldIFS";
 command=$(echo "$selected" | sed -E 's/^[[:space:]]*[0-9]+[[:space:]]*[0-9-]+[[:space:]]*[0-9:]+//');
 file=$(rg --files-with-matches "$word" ~/vimwiki/ | fzf --ansi --preview 'bat --color=always --style=plain --line-range=:100 {}' --reverse);
 file=$(rg --files-with-matches "$word" ~/vimwiki/diary | fzf --ansi --preview 'bat --color=always --style=plain --line-range=:100 {}' --reverse);
 file=$(rg --files-with-matches "$word" ~/vimwiki/ | fzf --ansi --preview 'bat --color=always --style=plain --line-range=:100 {}' --reverse);
 file=$(rg --files-with-matches "$word" ~/vimwiki/diary | fzf --ansi --preview 'bat --color=always --style=plain --line-range=:100 {}' --reverse);
 if [[ "$COMMAND" == "list" ]]; then
 if [[ "$COMMAND" == "clear" ]]; then
 if [[ "$COMMAND" == "list" ]]; then
 if [[ "$COMMAND" == "clear" ]]; then
 if [[ "$OP" == "in" ]]; then
 if [[ "$OP" == "at" ]]; then
 if [[ "$OP" == "now" ]]; then
 if [[ "$OP" == "in" ]]; then
 if [[ "$OP" == "at" ]]; then
 if [[ "$OP" == "now" ]]; then
 if [[ $COUNT -eq 0 || "$COMMAND" == "help" || "$COMMAND" == "--help" || "$COMMAND" == "-h" ]]; then
 local COMMAND="$1";
 local COUNT="$#";
 local MESSAGE="$1";
 local OP="$2";
 local TIME="now + $WHEN";
 local TIME="$WHEN";
 local TIME="now";
 local TIME="now + $WHEN";
 local TIME="$WHEN";
 local TIME="now";
 local WHEN="$@";
 local oldIFS="$IFS";
 ssd_files=$(fd .* --full-path /mnt/ssd/ 2> /dev/null | fzf --preview 'bat --color=always --style=plain --line-range=:100 {}' --ansi --reverse);
ALTERNATE_EDITOR=vim
ALTERNATE_TERMINAL=st
BASH_FUNC_ex%%=() {  if [ -f "$1" ]; then
BASH_FUNC_hs%%=() {  selected=$(history | fzf);
BASH_FUNC_pf%%=() {  current_directory=$(pwd);
BASH_FUNC_remind%%=() {  local SOUND=$HOME/bin/Bell.mp3;
BASH_FUNC_wi%%=() {  pushd $(pwd) > /dev/null;
BASH_FUNC_ws%%=() {  pushd $(pwd) > /dev/null;
BASH_FUNC_ww%%=() {  pushd $(pwd) > /dev/null || exit;
BROWSER=firefox
CDPATH=/home/nisidabay:/home/nisidabay/Videos:/home/nisidabay/Music:/home/nisidabay/Desktop:/home/nisidabay:Pictures
COLORTERM=truecolor
    
    --color fg:7,bg:0,hl:1,fg+:232,bg+:1,hl+:255
    --color info:7,prompt:2,spinner:1,pointer:232,marker:1

    --color fg:7,bg:0,hl:1,fg+:232,bg+:1,hl+:255
    --color info:7,prompt:2,spinner:1,pointer:232,marker:1

    --color fg:7,bg:0,hl:1,fg+:232,bg+:1,hl+:255
    --color info:7,prompt:2,spinner:1,pointer:232,marker:1

COLORTERM=truecolor
DEBUGINFOD_URLS=https://debuginfod.archlinux.org 
DESKTOP_SESSION=i3
 if [[ -n "$selected" ]]; then
DESKTOP_SESSION=i3
 history -s "!$command";
 eval "$command";
 fi
}
 cd ~/vimwiki || exit;
 local file;
DMBROWSER=firefox
';
 read -r -p "Enter the word to search for in vimwiki: " word;
DMBROWSER=firefox
DMEDITOR=xfce4-terminal -e vim
 if [[ -n "$file" ]]; then
 vim "$file";
 fi;
 popd > /dev/null
}
DMEDITOR=xfce4-terminal -e vim
 cd "$HOME/vimwiki/" || exit;
 vim index.md;
 popd > /dev/null || exit
}
DMENU=dmenu -i -l 20 -p
 cd ~/vimwiki/diary || exit;
 local file;
DMENU=dmenu -i -l 20 -p
DMTERM=xfce4-terminal -e
';
 read -r -p "Enter the word to search for in the diary: " word;
DMTERM=xfce4-terminal -e
EDITOR=nvim
 if [[ -n "$file" ]]; then
 vim "$file";
 fi;
 popd > /dev/null
}
EDITOR=nvim
 case $1 in 
 *.tar.bz2)
 tar xjf $1
 ;;
 *.tar.gz)
 tar xzf $1
 ;;
 *.bz2)
 bunzip2 $1
 ;;
 *.rar)
 unrar x $1
 ;;
 *.gz)
 gunzip $1
 ;;
 *.tar)
 tar xf $1
 ;;
 *.tbz2)
 tar xjf $1
 ;;
 *.tgz)
 tar xzf $1
 ;;
 *.zip)
 unzip $1
 ;;
 *.Z)
 uncompress $1
 ;;
 *.7z)
 7z x $1
 ;;
 *.deb)
 ar x $1
 ;;
 *.tar.xz)
 tar xf $1
 ;;
 *.tar.zst)
 unzstd $1
 ;;
 *)
 echo "'$1' cannot be extracted via ex()"
 ;;
 esac;
 else
 echo "'$1' is not a valid file";
 fi
}
FMENU=fzf --border=rounded --margin=5% --color=dark --height 100% --reverse --header=bash --info=hidden --header-first --prompt
FZF_DEFAULT_COMMAND=fd --type f --color=never --hidden
FZF_DEFAULT_OPTS=
 shift 2;
FZF_DEFAULT_OPTS=
GDMSESSION=i3
 echo "COMMAND";
 echo "    remind <message> <time>";
 echo "    remind <command>";
 echo;
 echo "DESCRIPTION";
 echo "    Displays notification at specified time";
 echo;
 echo "EXAMPLES";
 echo '    remind "Hi there" now';
 echo '    remind "Time to wake up" in 5 minutes';
 echo '    remind "Dinner" in 1 hour';
 echo '    remind "Take a break" at noon';
 echo '    remind "Are you ready?" at 13:00';
 echo '    remind list';
 echo '    remind clear';
 echo '    remind help';
 echo;
 return;
 fi;
 if ! which at > /dev/null; then
 echo "remind: AT utility is required but not installed on your system. Install it with your package manager of choice, for example 'sudo apt install at'.";
 return;
 fi;
 if [[ $COUNT -eq 1 ]]; then
GDMSESSION=i3
 at -l;
 else
GOPATH=/home/nisidabay/go
 at -r $(atq | cut -f1);
 else
 echo "remind: unknown command $COMMAND. Type 'remind' without any parameters to see syntax.";
 fi;
 return;
 fi;
GOPATH=/home/nisidabay/go
GTK3_MODULES=xapp-gtk3-module
 else
GTK3_MODULES=xapp-gtk3-module
GTK_MODULES=canberra-gtk-module
 else
GTK_MODULES=canberra-gtk-module
HISTCONTROL=ignoredups:erasedups
 else
 echo "remind: invalid time operator $OP";
 return;
 fi;
 notify-send "Reminder scheduled at $TIME";
 echo "/usr/bin/paplay '$SOUND' && notify-send '$MESSAGE'" | at "$TIME"
}
HISTCONTROL=ignoredups:erasedups
HISTFILESIZE=20000
HISTSIZE=10000
 if [[ -n "$ssd_files" ]]; then
 for file in $ssd_files;
 do
 vim "$file";
 done;
 fi;
 cd "$current_directory" || return
}
HISTSIZE=10000
HISTTIMEFORMAT=%F %T 
HOME=/home/nisidabay
I3SOCK=/run/user/1000/i3/ipc-socket.618038
LANG=es_ES.UTF-8
LC_ADDRESS=es_ES.UTF-8
LC_IDENTIFICATION=es_ES.UTF-8
LC_MEASUREMENT=es_ES.UTF-8
LC_MONETARY=es_ES.UTF-8
LC_NAME=es_ES.UTF-8
LC_NUMERIC=es_ES.UTF-8
LC_PAPER=es_ES.UTF-8
LC_TELEPHONE=es_ES.UTF-8
LC_TIME=es_ES.UTF-8
LOGNAME=nisidabay
LS_COLORS=di=34:ln=36:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43:su=30;41:ow=30;42:st=30;44:
MAIL=/var/spool/mail/nisidabay
MAILCMD=neomutt
MANPAGER=sh -c 'col -b | bat -l man -p'
MOTD_SHOWN=pam
NEOVIM=/home/nisidabay/.config/nvim/init.lua
PATH=/home/nisidabay/.config/emacs/bin:/home/nisidabay/.config/emacs/bin:/home/nisidabay/Applications:/home/nisidabay/.local/bin:/home/nisidabay/bin:/home/nisidabay/.config/emacs/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/var/lib/snapd/snap/bin:/home/nisidabay/go/bin:/home/nisidabay/go/bin:/home/nisidabay/go/bin
PATH=/home/nisidabay/Applications:/home/nisidabay/.local/bin:/home/nisidabay/bin:/home/nisidabay/.config/emacs/bin:/home/nisidabay/.config/emacs/bin:/home/nisidabay/Applications:/home/nisidabay/.local/bin:/home/nisidabay/bin:/home/nisidabay/.config/emacs/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/var/lib/snapd/snap/bin:/home/nisidabay/go/bin:/home/nisidabay/go/bin:/home/nisidabay/go/bin
PDF_VIEWER=zathura
PWD=/home/nisidabay
QT_QPA_PLATFORMTHEME=qt5ct
RMENU=rofi -dmenu -p
SHELL=/bin/bash
SHLVL=2
SSHPASS=Braveheart447
STARSHIP_SESSION_KEY=2402674718517076
STARSHIP_SESSION_KEY=2832229643655928
STARSHIP_SHELL=bash
TERM=xterm-256color
TERMINAL=xfce4-terminal
USER=nisidabay
VISUAL=nvim
VTE_VERSION=7401
WINDOWID=39845891
WMENU=wofi --dmenu --insensitive --lines 20
XAUTHORITY=/home/nisidabay/.Xauthority
    
    --color fg:7,bg:0,hl:1,fg+:232,bg+:1,hl+:255
    --color info:7,prompt:2,spinner:1,pointer:232,marker:1

    --color fg:7,bg:0,hl:1,fg+:232,bg+:1,hl+:255
    --color info:7,prompt:2,spinner:1,pointer:232,marker:1

    --color fg:7,bg:0,hl:1,fg+:232,bg+:1,hl+:255
    --color info:7,prompt:2,spinner:1,pointer:232,marker:1

XAUTHORITY=/home/nisidabay/.Xauthority
XDG_CONFIG_HOME=/home/nisidabay/.config
XDG_CURRENT_DESKTOP=i3
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
 if [[ -n "$selected" ]]; then
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
 history -s "!$command";
 eval "$command";
 fi
}
XDG_DOCUMENTS_DIR=/home/nisidabay/Documents
 cd ~/vimwiki || exit;
 local file;
XDG_DOCUMENTS_DIR=/home/nisidabay/Documents
XDG_DOWNLOAD_DIR=/home/nisidabay/Downloads
';
 read -r -p "Enter the word to search for in vimwiki: " word;
XDG_DOWNLOAD_DIR=/home/nisidabay/Downloads
XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/nisidabay
 if [[ -n "$file" ]]; then
 vim "$file";
 fi;
 popd > /dev/null
}
XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/nisidabay
 cd "$HOME/vimwiki/" || exit;
 vim index.md;
 popd > /dev/null || exit
}
XDG_MUSIC_DIR=/home/nisidabay/Music
 cd ~/vimwiki/diary || exit;
 local file;
XDG_MUSIC_DIR=/home/nisidabay/Music
XDG_PICTURES_DIR=/home/nisidabay/Pictures
';
 read -r -p "Enter the word to search for in the diary: " word;
XDG_PICTURES_DIR=/home/nisidabay/Pictures
XDG_RUNTIME_DIR=/run/user/1000
 if [[ -n "$file" ]]; then
 vim "$file";
 fi;
 popd > /dev/null
}
XDG_RUNTIME_DIR=/run/user/1000
 case $1 in 
 *.tar.bz2)
 tar xjf $1
 ;;
 *.tar.gz)
 tar xzf $1
 ;;
 *.bz2)
 bunzip2 $1
 ;;
 *.rar)
 unrar x $1
 ;;
 *.gz)
 gunzip $1
 ;;
 *.tar)
 tar xf $1
 ;;
 *.tbz2)
 tar xjf $1
 ;;
 *.tgz)
 tar xzf $1
 ;;
 *.zip)
 unzip $1
 ;;
 *.Z)
 uncompress $1
 ;;
 *.7z)
 7z x $1
 ;;
 *.deb)
 ar x $1
 ;;
 *.tar.xz)
 tar xf $1
 ;;
 *.tar.zst)
 unzstd $1
 ;;
 *)
 echo "'$1' cannot be extracted via ex()"
 ;;
 esac;
 else
 echo "'$1' is not a valid file";
 fi
}
XDG_SEAT=seat0
XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0
XDG_SESSION_CLASS=user
 shift 2;
XDG_SESSION_CLASS=user
XDG_SESSION_DESKTOP=i3
 echo "COMMAND";
 echo "    remind <message> <time>";
 echo "    remind <command>";
 echo;
 echo "DESCRIPTION";
 echo "    Displays notification at specified time";
 echo;
 echo "EXAMPLES";
 echo '    remind "Hi there" now';
 echo '    remind "Time to wake up" in 5 minutes';
 echo '    remind "Dinner" in 1 hour';
 echo '    remind "Take a break" at noon';
 echo '    remind "Are you ready?" at 13:00';
 echo '    remind list';
 echo '    remind clear';
 echo '    remind help';
 echo;
 return;
 fi;
 if ! which at > /dev/null; then
 echo "remind: AT utility is required but not installed on your system. Install it with your package manager of choice, for example 'sudo apt install at'.";
 return;
 fi;
 if [[ $COUNT -eq 1 ]]; then
XDG_SESSION_DESKTOP=i3
 at -l;
 else
XDG_SESSION_ID=9
 at -r $(atq | cut -f1);
 else
 echo "remind: unknown command $COMMAND. Type 'remind' without any parameters to see syntax.";
 fi;
 return;
 fi;
XDG_SESSION_ID=9
XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session3
 else
XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session3
XDG_SESSION_TYPE=x11
 else
XDG_SESSION_TYPE=x11
XDG_VIDEOS_DIR=/home/nisidabay/Movies
 else
 echo "remind: invalid time operator $OP";
 return;
 fi;
 notify-send "Reminder scheduled at $TIME";
 echo "/usr/bin/paplay '$SOUND' && notify-send '$MESSAGE'" | at "$TIME"
}
XDG_VIDEOS_DIR=/home/nisidabay/Movies
XDG_VTNR=7
_=/usr/bin/env
 if [[ -n "$ssd_files" ]]; then
 for file in $ssd_files;
 do
 vim "$file";
 done;
 fi;
 cd "$current_directory" || return
}
_=/usr/bin/env
